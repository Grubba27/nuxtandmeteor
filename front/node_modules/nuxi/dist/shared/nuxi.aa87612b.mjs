import 'assert';
import { g as gray, a as green, b as bold } from './nuxi.cb18516a.mjs';
import { createRequire } from 'node:module';
import { n as normalize } from './nuxi.dcd5f40f.mjs';

function getModulePaths(paths) {
  return [].concat(
    global.__NUXT_PREPATHS__,
    paths,
    process.cwd(),
    global.__NUXT_PATHS__
  ).filter(Boolean);
}
const _require = createRequire(process.cwd());
function resolveModule(id, paths) {
  return normalize(_require.resolve(id, { paths: getModulePaths(paths) }));
}
function requireModule(id, paths) {
  return _require(resolveModule(id, paths));
}
function tryRequireModule(id, paths) {
  try {
    return requireModule(id, paths);
  } catch {
    return null;
  }
}

function showVersions(cwd) {
  const getPkgVersion = (pkg) => {
    return tryRequireModule(`${pkg}/package.json`, cwd)?.version || "";
  };
  const nuxtVersion = getPkgVersion("nuxt") || getPkgVersion("nuxt-edge");
  const nitroVersion = getPkgVersion("nitropack");
  console.log(
    gray(
      green(`Nuxt ${bold(nuxtVersion)}`) + (nitroVersion ? ` with Nitro ${bold(nitroVersion)}` : "")
    )
  );
}

export { showVersions as s };
